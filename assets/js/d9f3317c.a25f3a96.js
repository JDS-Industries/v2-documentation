"use strict";(self.webpackChunkv_2_documentation=self.webpackChunkv_2_documentation||[]).push([[3120],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=c(r),h=o,d=p["".concat(u,".").concat(h)]||p[h]||m[h]||a;return r?n.createElement(d,l(l({ref:t},s),{},{components:r})):n.createElement(d,l({ref:t},s))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=h;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},5944:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:1},l="Git Workflow",i={unversionedId:"git/workflow",id:"git/workflow",title:"Git Workflow",description:"Before You Work:",source:"@site/docs/git/workflow.md",sourceDirName:"git",slug:"/git/workflow",permalink:"/v2-documentation/docs/git/workflow",draft:!1,editUrl:"https://github.com/JDS-Industries/v2-documentation/docs/git/workflow.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"gitSidebar"},u={},c=[{value:"Before You Work:",id:"before-you-work",level:3},{value:"While You Work:",id:"while-you-work",level:3},{value:"When feature is Complete and at the End of a Work Day:",id:"when-feature-is-complete-and-at-the-end-of-a-work-day",level:3},{value:"When feature is Complete:",id:"when-feature-is-complete",level:3},{value:"Ready to Go Live!:",id:"ready-to-go-live",level:3}],s={toc:c},p="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"git-workflow"},"Git Workflow"),(0,o.kt)("h3",{id:"before-you-work"},"Before You Work:"),(0,o.kt)("p",null,"Make sure you have the latest copy of master so you don't create merge conflicts with other developers."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout master\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git pull\n")),(0,o.kt)("p",null,"Then, create a feature branch for what you plan to work on. ",(0,o.kt)("mark",null,"1 feature = 1 branch!")," You can create multiple feature branches for multiple features and you won't have to worry about them interfering with one another or having issues if one of them doesn't need to be finished."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout -b my-example-feature\n")),(0,o.kt)("h3",{id:"while-you-work"},"While You Work:"),(0,o.kt)("p",null,"Now you are on the feature branch and you can begin coding. ",(0,o.kt)("mark",null,"make commits often")," as you complete tasks within the feature."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git add .\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'git commit -m "adds input form fields to the example feature"\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"<code more>")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git add .\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'git commit -m "handles form submission for example feature"\n')),(0,o.kt)("h3",{id:"when-feature-is-complete-and-at-the-end-of-a-work-day"},"When feature is Complete and at the End of a Work Day:"),(0,o.kt)("p",null,"Push the code up to the feature branch to the JDS GitHub Repository."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git push -u origin my-example-feature\n")),(0,o.kt)("h3",{id:"when-feature-is-complete"},"When feature is Complete:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Open a browser and go to the Github site ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/JDS-Industries/"},"https://github.com/JDS-Industries/")),(0,o.kt)("li",{parentName:"ul"},'Click on the project you are working where it says "x branches" near the top'),(0,o.kt)("li",{parentName:"ul"},"Locate my-example-feature in the list and click the button to create the pull request"),(0,o.kt)("li",{parentName:"ul"},"Create the pull request and then you can have other developers review the code if you think that is necessary. Anyone can make comments on any line of code."),(0,o.kt)("li",{parentName:"ul"},"Once you are ready to go live, click the button to merge the pull request into master")),(0,o.kt)("h3",{id:"ready-to-go-live"},"Ready to Go Live!:"),(0,o.kt)("p",null,"Now the code is merged into the master branch but it won't be live until you pull it on the IBM server"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Open a command prompt and SSH into the IBM I ",(0,o.kt)("inlineCode",{parentName:"li"},"ssh username@10.1.2.3")),(0,o.kt)("li",{parentName:"ul"},"Change to the project directory in LIVE: ",(0,o.kt)("inlineCode",{parentName:"li"},"cd/www/seidenrpm/htdocs/project")),(0,o.kt)("li",{parentName:"ul"},"Make sure you are the master branch ",(0,o.kt)("inlineCode",{parentName:"li"},"git checkout master")),(0,o.kt)("li",{parentName:"ul"},"Pull the changes to go live! ",(0,o.kt)("inlineCode",{parentName:"li"},"git pull"))),(0,o.kt)("p",null,"Now the feature is live and you can leave the feature branch out there if you want. We'll remove the old ones every ~3 months or so."))}m.isMDXComponent=!0}}]);